{"version":3,"sources":["components/Note.js","components/AddNote.js","components/NotesList.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["Note","_ref","id","text","date","handleDeleteNote","react_default","a","createElement","className","index_esm","size","onClick","AddNote","handleAddNote","_useState","useState","_useState2","Object","slicedToArray","noteText","setNoteText","Fragment","rows","cols","placeholder","onChange","e","target","value","length","characterLimit","trim","NotesList","notes","map","note","components_Note","components_AddNote","Search","handleSearchNote","type","event","Header","handleTogleDarkMode","prevDarkMode","App","setNotes","_useState3","_useState4","searchText","setSearchText","_useState5","_useState6","darkMode","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","concat","components_Header","components_Search","components_NotesList","filter","toLocaleLowerCase","includes","Date","newNote","nanoid","toLocaleDateString","newNotes","toConsumableArray","item","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f0fa8b63.chunk.js","sourcesContent":["import React from 'react'\nimport { MdDeleteForever} from 'react-icons/md'\n\n\nfunction Note({id,text,date, handleDeleteNote}) {\n  return (\n    <div className='note'>\n<span> {text}  </span>\n<div className='note-footer'> \n<small>   {date}   </small>\n<MdDeleteForever className='delete-icon' size= '1.3em' \nonClick={()=>{handleDeleteNote(id)}}/>\n</div>\n\n\n    </div>\n  )\n}\n\nexport default Note","import React, {useState} from 'react'\n\nconst AddNote = ({handleAddNote})=>{\n    const [noteText, setNoteText]=useState('')\n    const characterLimit =200\n\n    const handleChange=(e)=>{\n            if( e.target.value.length< characterLimit+1){\n        setNoteText(e.target.value)\n            }\n\n    }\n\n    const handleSaveClick=()=>{\n        if(noteText.trim().length>0){\n        handleAddNote(noteText)\n        setNoteText('')\n        }\n    }\n\n    return(<>        <div className=\"note new\" >\n            <textarea  \n            rows='8'\n            cols='10'\n            placeholder=\"type to add\"\n            onChange={handleChange}\n            value={noteText}></textarea>\n            <div className='note-footer'>\n                <small>{characterLimit-noteText.length} remaining</small>\n                <button className=\"save\"\n                onClick={handleSaveClick}>Save </button>\n            \n            \n\n        </div>\n        </div>\n        </>\n      )\n\n\n\n    }\nexport  default AddNote;","import React from 'react'\nimport Note from './Note'\nimport AddNote from './AddNote'\n\n\nfunction NotesList({notes, handleAddNote , handleDeleteNote}) {\n  return (   <div className='notes-list'>\n\n      {notes.map( (note) =>\n      ( <Note id={note.id} text={note.text} \n        date={note.date}  \n        handleDeleteNote={handleDeleteNote} />)\n      )}  \n      <AddNote handleAddNote={handleAddNote} \n      />\n        </div>\n  )\n}\n\n\nexport default NotesList","import React from 'react'\nimport {MdSearch} from 'react-icons/md'\n\nfunction Search({ handleSearchNote}) {\n  return (\n    <div className='search'>\n\n        <MdSearch className='searcch-icons' size='1.3em'/>\n    <input type='text'\n    className='input'\n    placeholder='type to search...'\n    onChange={(event)=>{handleSearchNote(event.target.value)}} />\n\n    </div>\n  )\n}\n\nexport default Search","import React from 'react'\n\nfunction  Header({handleTogleDarkMode}){\n \n  return (    <div className='header'>\n        <h1> Notes  </h1>\n        <h4> cloned from chrisblakely </h4>\n        <button className='save'\n        onClick={\n          ()=>(handleTogleDarkMode((prevDarkMode)=> !prevDarkMode )  )} >\n           Toggle Mode</button>\n    </div>\n  )\n}\n\nexport default  Header \n\n","import React from 'react'\nimport \"./App.css\";\nimport NoteList from './components/NotesList'\nimport Search from './components/Search'\nimport Header from './components/Header';\n//import Note from './components/Note'\nimport {nanoid} from  'nanoid'\nimport {useState ,useEffect} from 'react'\n\n\n\nfunction App() {\n  const [notes,setNotes]=useState(\n    [ /*\n{id:nanoid(), text:\"note1\", date:'15/07/2022'},\n{id:nanoid(), text:\"note  2\", date:'15/07/2022'},\n{id:nanoid(), text:\"note three\", date:'15/07/2022'},\n{id:nanoid(), text:\"another note\", date:'15/07/2022'},\n{id:nanoid(), text:\"note1  note 22222\", date:'15/08/2022'},\n{id:nanoid(), text:\"note1  note new \", date:'25/08/2022'},\n{id:nanoid(), text:\"note1  note not last\", date:'15/10/2022'},\n{id:nanoid(), text:\"note55 \", date:'15/07/2022'}\n*/\n  ])\nconst [searchText, setSearchText] =useState('')\n\nconst [darkMode, setDarkMode]=useState(false)\n\n  const addNote = (text) =>{\n    const date  = new Date()\n    const newNote = {\n      id:nanoid(),\n      text:text,\n      date: date.toLocaleDateString()  }\n      const newNotes = [...notes, newNote]\n      setNotes(newNotes)\n    }\n  \n  const deleteNote =  (id)=>{\n    const prevNotes= notes\n    setNotes(prevNotes.filter( (item) => {return item.id !== id}\n      ) )\n  }\n\n  useEffect(\n    ()=>{\n      const savedNotes=JSON.parse(localStorage.getItem('react-notes-app-data'))\n      if (savedNotes){\n        setNotes(savedNotes)      }\n    }\n    ,[]\n  )\n  useEffect( ()=>{\n      localStorage.setItem('react-notes-app-data',\n      JSON.stringify(notes))\n \n  } ,[notes])\n\n\n\n  return (\n    <div className={`${darkMode && 'dark-mode'} `} >\n    <div className=\"container\">\n      <Header  handleTogleDarkMode={setDarkMode}/>\n      <Search handleSearchNote= {setSearchText}/>\n      <NoteList notes={notes.filter( (note) => \n      note.text.toLocaleLowerCase().includes(searchText))\n      } \n      handleAddNote={addNote}\n      handleDeleteNote={deleteNote}/>\n    </div>     </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}