{"ast":null,"code":"import _toConsumableArray from \"/home/dan/Documents/React/notes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/dan/Documents/React/notes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/dan/Documents/React/notes/src/App.js\";\nimport React from 'react';\nimport \"./App.css\";\nimport NoteList from './components/NotesList';\nimport Search from './components/Search';\nimport Header from './components/Header'; //import Note from './components/Note'\n\nimport { nanoid } from 'nanoid';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  var _useState = useState([\n    /*\n    {id:nanoid(), text:\"note1\", date:'15/07/2022'},\n    {id:nanoid(), text:\"note  2\", date:'15/07/2022'},\n    {id:nanoid(), text:\"note three\", date:'15/07/2022'},\n    {id:nanoid(), text:\"another note\", date:'15/07/2022'},\n    {id:nanoid(), text:\"note1  note 22222\", date:'15/08/2022'},\n    {id:nanoid(), text:\"note1  note new \", date:'25/08/2022'},\n    {id:nanoid(), text:\"note1  note not last\", date:'15/10/2022'},\n    {id:nanoid(), text:\"note55 \", date:'15/07/2022'}\n    */\n  ]),\n      _useState2 = _slicedToArray(_useState, 2),\n      notes = _useState2[0],\n      setNotes = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchText = _useState4[0],\n      setSearchText = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      darkMode = _useState6[0],\n      setDarkMode = _useState6[1];\n\n  var addNote = function addNote(text) {\n    var date = new Date();\n    var newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString()\n    };\n    var newNotes = [].concat(_toConsumableArray(notes), [newNote]);\n    setNotes(newNotes);\n  };\n\n  var deleteNote = function deleteNote(id) {\n    var prevNotes = notes;\n    setNotes(prevNotes.filter(function (item) {\n      return item.id !== id;\n    }));\n  };\n\n  useEffect(function () {\n    var savedNotes = JSON.parse(localStorage.getItem('react-notes-app-data'));\n\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, []);\n  useEffect(function () {\n    localStorage.setItem('react-notes-app-data', JSON.stringify(notes));\n  }, [notes]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(darkMode && 'dark-mode', \" \"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    handleTogleDarkMode: setDarkMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    handleSearchNote: setSearchText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NoteList, {\n    notes: notes.filter(function (note) {\n      return note.text.toLocaleLowerCase().includes(searchText);\n    }),\n    handleAddNote: addNote,\n    handleDeleteNote: deleteNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  })), \"     \");\n}\n\nexport default App;","map":{"version":3,"names":["React","NoteList","Search","Header","nanoid","useState","useEffect","App","notes","setNotes","searchText","setSearchText","darkMode","setDarkMode","addNote","text","date","Date","newNote","id","toLocaleDateString","newNotes","deleteNote","prevNotes","filter","item","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","note","toLocaleLowerCase","includes"],"sources":["/home/dan/Documents/React/notes/src/App.js"],"sourcesContent":["import React from 'react'\nimport \"./App.css\";\nimport NoteList from './components/NotesList'\nimport Search from './components/Search'\nimport Header from './components/Header';\n//import Note from './components/Note'\nimport {nanoid} from  'nanoid'\nimport {useState ,useEffect} from 'react'\n\n\n\nfunction App() {\n  const [notes,setNotes]=useState(\n    [ /*\n{id:nanoid(), text:\"note1\", date:'15/07/2022'},\n{id:nanoid(), text:\"note  2\", date:'15/07/2022'},\n{id:nanoid(), text:\"note three\", date:'15/07/2022'},\n{id:nanoid(), text:\"another note\", date:'15/07/2022'},\n{id:nanoid(), text:\"note1  note 22222\", date:'15/08/2022'},\n{id:nanoid(), text:\"note1  note new \", date:'25/08/2022'},\n{id:nanoid(), text:\"note1  note not last\", date:'15/10/2022'},\n{id:nanoid(), text:\"note55 \", date:'15/07/2022'}\n*/\n  ])\nconst [searchText, setSearchText] =useState('')\n\nconst [darkMode, setDarkMode]=useState(false)\n\n  const addNote = (text) =>{\n    const date  = new Date()\n    const newNote = {\n      id:nanoid(),\n      text:text,\n      date: date.toLocaleDateString()  }\n      const newNotes = [...notes, newNote]\n      setNotes(newNotes)\n    }\n  \n  const deleteNote =  (id)=>{\n    const prevNotes= notes\n    setNotes(prevNotes.filter( (item) => {return item.id !== id}\n      ) )\n  }\n\n  useEffect(\n    ()=>{\n      const savedNotes=JSON.parse(localStorage.getItem('react-notes-app-data'))\n      if (savedNotes){\n        setNotes(savedNotes)      }\n    }\n    ,[]\n  )\n  useEffect( ()=>{\n      localStorage.setItem('react-notes-app-data',\n      JSON.stringify(notes))\n \n  } ,[notes])\n\n\n\n  return (\n    <div className={`${darkMode && 'dark-mode'} `} >\n    <div className=\"container\">\n      <Header  handleTogleDarkMode={setDarkMode}/>\n      <Search handleSearchNote= {setSearchText}/>\n      <NoteList notes={notes.filter( (note) => \n      note.text.toLocaleLowerCase().includes(searchText))\n      } \n      handleAddNote={addNote}\n      handleDeleteNote={deleteNote}/>\n    </div>     </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CACA;;AACA,SAAQC,MAAR,QAAsB,QAAtB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAIA,SAASC,GAAT,GAAe;EAAA,gBACUF,QAAQ,CAC7B;IAAE;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATI,CAD6B,CADlB;EAAA;EAAA,IACNG,KADM;EAAA,IACAC,QADA;;EAAA,iBAaoBJ,QAAQ,CAAC,EAAD,CAb5B;EAAA;EAAA,IAaRK,UAbQ;EAAA,IAaIC,aAbJ;;EAAA,iBAeeN,QAAQ,CAAC,KAAD,CAfvB;EAAA;EAAA,IAeRO,QAfQ;EAAA,IAeEC,WAfF;;EAiBb,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAS;IACvB,IAAMC,IAAI,GAAI,IAAIC,IAAJ,EAAd;IACA,IAAMC,OAAO,GAAG;MACdC,EAAE,EAACf,MAAM,EADK;MAEdW,IAAI,EAACA,IAFS;MAGdC,IAAI,EAAEA,IAAI,CAACI,kBAAL;IAHQ,CAAhB;IAIE,IAAMC,QAAQ,gCAAOb,KAAP,IAAcU,OAAd,EAAd;IACAT,QAAQ,CAACY,QAAD,CAAR;EACD,CARH;;EAUA,IAAMC,UAAU,GAAI,SAAdA,UAAc,CAACH,EAAD,EAAM;IACxB,IAAMI,SAAS,GAAEf,KAAjB;IACAC,QAAQ,CAACc,SAAS,CAACC,MAAV,CAAkB,UAACC,IAAD,EAAU;MAAC,OAAOA,IAAI,CAACN,EAAL,KAAYA,EAAnB;IAAsB,CAAnD,CAAD,CAAR;EAED,CAJD;;EAMAb,SAAS,CACP,YAAI;IACF,IAAMoB,UAAU,GAACC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,sBAArB,CAAX,CAAjB;;IACA,IAAIJ,UAAJ,EAAe;MACbjB,QAAQ,CAACiB,UAAD,CAAR;IAA2B;EAC9B,CALM,EAMN,EANM,CAAT;EAQApB,SAAS,CAAE,YAAI;IACXuB,YAAY,CAACE,OAAb,CAAqB,sBAArB,EACAJ,IAAI,CAACK,SAAL,CAAexB,KAAf,CADA;EAGH,CAJQ,EAIN,CAACA,KAAD,CAJM,CAAT;EAQA,oBACE;IAAK,SAAS,YAAKI,QAAQ,IAAI,WAAjB,MAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA;IAAK,SAAS,EAAC,WAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,MAAD;IAAS,mBAAmB,EAAEC,WAA9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAEE,oBAAC,MAAD;IAAQ,gBAAgB,EAAGF,aAA3B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,eAGE,oBAAC,QAAD;IAAU,KAAK,EAAEH,KAAK,CAACgB,MAAN,CAAc,UAACS,IAAD;MAAA,OAC/BA,IAAI,CAAClB,IAAL,CAAUmB,iBAAV,GAA8BC,QAA9B,CAAuCzB,UAAvC,CAD+B;IAAA,CAAd,CAAjB;IAGA,aAAa,EAAEI,OAHf;IAIA,gBAAgB,EAAEQ,UAJlB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAHF,CADA,UADF;AAYD;;AAED,eAAef,GAAf"},"metadata":{},"sourceType":"module"}